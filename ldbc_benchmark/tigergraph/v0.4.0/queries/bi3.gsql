CREATE OR REPLACE DISTRIBUTED QUERY bi3(STRING tagClass, STRING country) FOR GRAPH ldbc_snb SYNTAX v2 {

  TYPEDEF TUPLE <UINT forumId, STRING forumTitle, DATETIME forumCreationDate, UINT personId, UINT messageCount> RESULT;

  HeapAccum<RESULT>(20, messageCount DESC, forumId ASC) @@result;

  SumAccum<UINT> @messageCount;
  MinAccum<UINT> @personId;

  tagClassWithName = SELECT tc FROM TagClass:tc WHERE tc.name == tagClass;
  countryWithName = SELECT c FROM Country:c WHERE c.name == country;

  forums =
    SELECT f
    FROM countryWithName -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p -(<HAS_MODERATOR)- Forum:f
    ACCUM f.@personId = p.id;

  tmp =
    SELECT f
    FROM tagClassWithName -(<HAS_TYPE.<HAS_TAG)- (Comment|Post):m -(REPLY_OF>*.<CONTAINER_OF)- forums:f
    # FROM forums:f -(CONTAINER_OF>.<REPLY_OF*)- (Comment|Post):m -(HAS_TAG>.HAS_TYPE>)- tagClassWithName
    ACCUM f.@messageCount += 1
    POST-ACCUM @@result += RESULT(f.id, f.title, f.creationDate, f.@personId, f.@messageCount);

  PRINT @@result;

  /*
  # Below does not work in 3.1.0. Fixed in 3.1.1.
  SELECT
    f.id AS forumId,
    f.title AS forumTitle,
    f.creationDate AS forumCreationDate,
    f.@personId AS personId,
    COUNT(m) AS messageCount
  INTO result
  FROM forums:f -(CONTAINER_OF>.<REPLY_OF*)- (Comment|Post):m -(HAS_TAG>.HAS_TYPE>)- tagClassWithName
  GROUP BY f
  ORDER BY messageCount DESC, forumId ASC
  LIMIT 20;
  */
}

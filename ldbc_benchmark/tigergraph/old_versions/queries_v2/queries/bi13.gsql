  
//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 13 query description is on page 71 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi13

CREATE DISTRIBUTED QUERY bi13(STRING countryName) {
  TYPEDEF TUPLE<STRING tag_name, INT popularity> tagInfo;
  TYPEDEF TUPLE<INT year, INT month, JSONARRAY popularTags> tagStats;

  GroupByAccum<INT year, INT month, GroupByAccum<STRING tagName, SumAccum<INT> popularity> tagGroup> @@monthlyGroup;
  HeapAccum<tagInfo>(5, popularity DESC, tag_name ASC) @@tagInfoTop;
  HeapAccum<tagStats>(100, year DESC, month ASC) @@tagStatsTop;

  STRING jsonStr;
  bool needComma;

  vMessage = 
    SELECT t
    FROM Country:s-(<IS_LOCATED_IN)-(Comment|Post):t
    WHERE s.name == countryName;
    
  vMessage = 
    SELECT s
    FROM vMessage:s-(HAS_TAG>)-Tag:t
    ACCUM @@monthlyGroup += (year(s.creationDate), month(s.creationDate) -> (t.name -> 1));

  FOREACH (y,m,tg) IN @@monthlyGroup DO
    @@tagInfoTop.clear();
    // put tags into heap to get 5 most popular tags
    FOREACH t IN tg DO
      @@tagInfoTop += tagInfo(t.tagName, t.popularity);
    END;

    // put 5 most popular tags into JSONARRAY
    jsonStr = "[";
    needComma = False;
    FOREACH ti IN @@tagInfoTop DO
      IF needComma THEN
        jsonStr = jsonStr + ",";
      ELSE
        needComma = True;
      END;
      jsonStr = jsonStr + "[\"" + ti.tag_name + "\"," + to_string(ti.popularity) + "]";
    END;
    jsonStr = jsonStr + "]";
    @@tagStatsTop += tagStats(y, m, parse_json_array(jsonStr));
  END;

  PRINT @@tagStatsTop;
}

//INSTALL QUERY bi13
//RUN QUERY bi13("Burma")
//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 11 query description is on page 69 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "_v2"
USE GRAPH ldbc_snb
DROP QUERY bi11_index

CREATE DISTRIBUTED QUERY bi11_index(STRING countryName, set<STRING> blacklist, datetime ts) { 
  TYPEDEF TUPLE<INT personId, STRING tagName, INT likeCount, INT replyCount> reply;

  SetAccum<string> @@blacklistedPatterns;
  AndAccum @isValid;
  SumAccum<INT> @personId,@likeCount;
  SetAccum<VERTEX<Tag>> @tagSet;
  SetAccum<STRING> @tagNames;
  GroupByAccum<INT personId, STRING tagName, SumAccum<INT> likeCount, SumAccum<INT> replyCount> @@replyGroup;
  HeapAccum<reply>(100, likeCount DESC, personId ASC, tagName ASC) @@replyTop;
  
  FOREACH word IN blacklist DO
    @@blacklistedPatterns += ("%" + word + "%");
  END;

  //C = SELECT c FROM Country:c WHERE c.name == countryName;
  P = SELECT p FROM Country:c -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p 
      WHERE p.creationDate == ts ; 
  R = 
    SELECT r
    FROM P:p-(<HAS_CREATOR)- Comment:r 
    ACCUM 
      r.@personId = p.id,
      FOREACH wordPattern IN @@blacklistedPatterns DO
        CASE WHEN r.content LIKE wordPattern THEN
          r.@isValid += false,
          BREAK
        END
      END
    HAVING r.@isValid;

  T =
    SELECT t
    FROM R:r -(REPLY_OF>.HAS_TAG>)- Tag:t
    PER(r,t)
    ACCUM r.@tagSet += t;
      
  tmp = 
    SELECT r 
    FROM R:r-(HAS_TAG>)-Tag:t
    ACCUM 
      IF t IN r.@tagSet THEN 
      r.@isValid += false
      END,
      r.@tagNames += t.name;

  R =
    SELECT r
    FROM  R:r -(<LIKES)- Person:p
    WHERE r.@isValid
    ACCUM r.@likeCount += 1
    POST-ACCUM 
      FOREACH tn IN r.@tagNames DO
        @@replyGroup += (r.@personId, tn -> r.@likeCount, 1)
      END;

  FOREACH (p,t,l,r) IN @@replyGroup DO
    @@replyTop += reply(p,t,l,r);
  END;

  PRINT @@replyTop;
}

//INSTALL QUERY bi11
//RUN QUERY bi11("Mexico", ["has","Green"])

//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 21 query description is on page 79 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "_v2"
USE GRAPH ldbc_snb
DROP QUERY bi21_index

CREATE DISTRIBUTED QUERY bi21_index(string cName, datetime Date1,datetime endDate) {
  TYPEDEF TUPLE<INT zombieId, INT zombieLikeCount, INT totalLikeCount, DOUBLE zombieScore> zombie;
  HeapAccum<zombie>(100, zombieScore DESC, zombieId ASC) @@zombieTop;
  int secondsInMonth;
  SumAccum<int> @messageCount, @totalLikeCount, @zombieLikeCount;
  SumAccum<float> @zombieScore;
  SetAccum<vertex<Person>> @@ZombieSet;
  Zombie =
    SELECT p
    FROM Country:c -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p -(<HAS_CREATOR)- (Post|Comment):m
    //WHERE c.name == cName AND p.creationDate < endDate AND m.creationDate < endDate
    //index(Post.creationDate), index(Comment.creationDate), index(person.creationDate)
    //WHERE c.name == cName AND p.creationDate == Date1  AND m.creationDate == endDate
    WHERE m.creationDate == endDate AND p.creationDate == Date1
    PER(p,m)
    ACCUM p.@messageCount += 1
    HAVING p.@messageCount < (year(endDate) - year(p.creationDate)) * 12 + (month(endDate) - month(p.creationDate)) + 1;

  Zombie = SELECT z FROM Zombie:z ACCUM @@ZombieSet += z;
  //if one person likes two comments by the zombie, it is counted as two.
  tmp =
    SELECT z
    FROM Zombie:z -(<HAS_CREATOR)- (Post|Comment):m -(<LIKES)- Person:p,
    //WHERE p.creationDate < endDate
    //index(Person.creationDate)
    WHERE p.creationDate == Date1
    PER(z,m,p)
    ACCUM
      z.@totalLikeCount += 1,
      IF p in @@ZombieSet THEN
        z.@zombieLikeCount += 1
      END
    POST-ACCUM
      IF z.@totalLikeCount > 0.000001 THEN // avoid division by zero
        @@zombieTop += zombie(z.id, z.@zombieLikeCount, z.@totalLikeCount, 1.0 * z.@zombieLikeCount / z.@totalLikeCount)
      ELSE
        @@zombieTop += zombie(z.id, 0, 0, 0)
      END;

  PRINT @@zombieTop;
}

//INSTALL QUERY bi21
//RUN QUERY bi21("Ethiopia","2013-01-01 00:00:00")

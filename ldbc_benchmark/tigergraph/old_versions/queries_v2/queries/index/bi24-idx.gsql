//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 24 query description is on page 82 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi24_index

CREATE DISTRIBUTED QUERY bi24_index(string tcName, datetime ts) {
  typedef tuple<int messageCount, int likeCount, int year, int month, string continentName> ResTuple;
  HeapAccum<ResTuple>(100, year ASC, month ASC, continentName DESC) @@result;
  GroupByAccum<int year, int month, string continentName, SumAccum<int> messageCount, SumAccum<int> likeCount> @@group;
  SumAccum<string> @continentName;
  SumAccum<int> @likeCount;
  
// TC = SELECT tc FROM TagClass:tc WHERE tc.name == tcName;
  vMessages =
    SELECT m
    FROM TagClass:tc-(<HAS_TYPE.<HAS_TAG)-(Post|Comment):m//TC -(<HAS_TYPE.<HAS_TAG)-(Post|Comment):m
    WHERE m.creationDate == ts ;
  
  vMessagesWithLike =
    SELECT m
    FROM vMessages:m -(<LIKES)- Person:p
    ACCUM m.@likeCount += 1;

  vCountry = 
    SELECT cn
    FROM Continent:c -(<IS_PART_OF)-Country:cn
    ACCUM cn.@continentName = c.name;

  vCountry =
    SELECT cn
    FROM vMessages:m -(IS_LOCATED_IN>)-Country:cn  
    ACCUM @@group += (year(m.creationDate), month(m.creationDate), cn.@continentName -> 1, m.@likeCount);

  FOREACH (y,m,c,mc,lc) in @@group DO
    @@result += ResTuple(mc, lc, y, m, c);
  END;
  PRINT @@result;
}

/*slow
CREATE DISTRIBUTED QUERY bi24(string tcName) {
  typedef tuple<int messageCount, int likeCount, int year, int month, string continentName> ResTuple;
  HeapAccum<ResTuple>(100, year ASC, month ASC, continentName DESC) @@result;
  GroupByAccum<int year, int month, string continentName, SumAccum<int> messageCount, SumAccum<int> likeCount> @@group;
  SumAccum<string> @continentName;
  SumAccum<int> @likeCount;
  
  TC = SELECT tc FROM TagClass:tc WHERE tc.name == tcName;
  vMessages =
    SELECT m
    FROM TC -(<HAS_TYPE.<HAS_TAG)-(Post|Comment):m;
  
  vMessagesWithLike =
    SELECT m
    FROM vMessages:m -(<LIKES)- Person:p
    ACCUM m.@likeCount += 1;

  Messages =
    SELECT m
    FROM vMessages:m -(IS_LOCATED_IN>.IS_PART_OF>)- Continent:c
    PER(m,c)
    ACCUM m.@continentName = c.name
    POST-ACCUM @@group += (year(m.creationDate), month(m.creationDate), m.@continentName -> 1, m.@likeCount);

  FOREACH (y,m,c,mc,lc) in @@group DO
    @@result += ResTuple(mc, lc, y, m, c);
  END;
  PRINT @@result;
}
*/

CREATE DISTRIBUTED QUERY bi5(string countryName, datetime Date1) for graph ldbc_snb {
  TYPEDEF TUPLE <VERTEX v, INT popCount, INT id> forumInfo;
	TYPEDEF TUPLE <INT postCount, STRING firstName, STRING lastName, DATETIME creationDate, INT id> personInfo;
/* __TF_HOP_BEGIN:0 */

// while loop iteration counter
int i;

/* __TF_HOP_END:0 */
	HeapAccum<forumInfo>(100, popCount DESC, id ASC) @@forumHeap;
	HeapAccum<personInfo>(100, postCount DESC, id ASC) @@result;
  SetAccum<VERTEX<Forum>> @@topForum;
  SumAccum<int> @memberCount, @postCount;
  OrAccum<bool> @valid;
  // find the top 100 most popular forums
  /* __TF_HOP_BEGIN:17 */
VS_c1 = { Country.* };

VS__1 =
	select x_1
	from   VS_c1:c -(IS_PART_OF_REVERSE:x)-> _:x_1;

VS__2 =
	select p
	from   VS__1:x_1 -(IS_LOCATED_IN_REVERSE:x)-> Person:p;

ForumSet =
	select f
	from   VS__2:p -(HAS_MEMBER_REVERSE:x_3)-> Forum:f
	where  f.creationDate == Date1
	accum       f.@memberCount += 1
		
	post-accum @@forumHeap += forumInfo(f, f.@memberCount, f.id);
/* __TF_HOP_END:24 */
  
  FOREACH item IN @@forumHeap DO
	    @@topForum += item.v;
	END;
  ForumSet = {@@topForum};
  // find members who created posts in these forums
  /* __TF_HOP_BEGIN:31 */
P =
	select p
	from   ForumSet:f -(HAS_MEMBER:x)-> Person:p
	accum       p.@valid += true
		;
/* __TF_HOP_END:31 */
  /* __TF_HOP_BEGIN:32 */
VS__5 =
	select m
	from   ForumSet:f -(CONTAINER_OF:x)-> Post:m;

PersonWithPost =
	select p
	from   VS__5:m -(HAS_CREATOR:x_11)-> Person:p
	where  p.@valid
	accum       p.@postCount += 1
		;
/* __TF_HOP_END:37 */
    
  P =
    SELECT s FROM P:s
    ACCUM @@result += personInfo(s.@postCount, s.firstName, s.lastName, s.creationDate, s.id);
  PRINT @@result;	
}

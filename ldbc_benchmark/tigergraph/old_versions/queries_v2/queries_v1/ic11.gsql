//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 11 query description is on page 42 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic11

CREATE DISTRIBUTED QUERY ic11(VERTEX<Person> personId, STRING countryName, INT workFromYear) {
  TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, STRING organizationName, INT organizationWorkFromYear> friendInfo;

  SetAccum<VERTEX<Person>> @@friendAll;
  OrAccum @visited;
  OrAccum @locatedInGivenCountry;
  HeapAccum<friendInfo>(10, organizationWorkFromYear ASC, personId ASC, organizationName DESC) @@friendInfoTop;

  INT i;

  vPerson = { personId };
  WHILE i < 2 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-(KNOWS)-Person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True,
        @@friendAll += t;

    i = i + 1;
  END;

  findCompanyInGivenCountry = 
    SELECT t
    FROM Company:s-(IS_LOCATED_IN>)-Country:t
    WHERE t.name == countryName
    ACCUM s.@locatedInGivenCountry += True;

  vFriend(Person) = { @@friendAll };
  aggFriend = 
    SELECT s
    FROM vFriend:s-(WORK_AT>:e)-Company:t
    WHERE e.workFrom < workFromYear AND t.@locatedInGivenCountry == True
    ACCUM @@friendInfoTop += friendInfo(s.id, s.firstName, s.lastName, t.name, e.workFrom);

  PRINT @@friendInfoTop;
}

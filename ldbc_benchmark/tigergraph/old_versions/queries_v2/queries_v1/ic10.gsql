//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 10 query description is on page 41 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic10

CREATE DISTRIBUTED QUERY ic10(VERTEX<Person> personId, INT month) {
  TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, INT commonInterestScore, STRING personGender, STRING personCityName> friendInfo;

  OrAccum @visited;
  SumAccum<STRING> @city;
  //SetAccum<VERTEX<Tag>> @@tagInterest;
	OrAccum @valid, @hasCommonInterest;
  SumAccum<INT> @commonInterestScore;
  HeapAccum<friendInfo>(10, commonInterestScore DESC, personId ASC) @@friendInfoTop;
  int nextMonth;

  nextMonth = 1 + month % 12;
  vPerson = { personId };
  vTag = 
    SELECT t
    FROM vPerson:s-(HAS_INTEREST>)-Tag:t
    POST-ACCUM t.@valid = true;
    //POST-ACCUM @@tagInterest += t;

  vFriend1h = 
    SELECT t
    FROM vPerson:s-(KNOWS)-Person:t
    ACCUM 
      s.@visited += True,
      t.@visited += True;

  vFriend2h = 
    SELECT t
    FROM vFriend1h:s-(KNOWS)-Person:t
    WHERE t.@visited == False
    AND ((month(t.birthday) == month AND day(t.birthday) >= 21) OR 
        (month(t.birthday) == nextMonth AND day(t.birthday) < 22));

  vFriend2h = 
    SELECT s
    FROM vFriend2h:s-(IS_LOCATED_IN>)-City:t
    ACCUM s.@city = t.name;

  vPost = 
    SELECT t
    FROM vFriend2h:s-(<HAS_CREATOR)-Post:t;

  findCommonInterest = 
    SELECT t
    FROM vPost:s-(HAS_TAG>)-Tag:t
    WHERE t.@valid ACCUM s.@hasCommonInterest += True;
    

	calcCommonInterestScore = 
	  SELECT t
	  FROM vPost:s-(HAS_CREATOR>)-Person:t
	  ACCUM
	    IF s.@hasCommonInterest THEN
	        t.@commonInterestScore += 1
      ELSE
	        t.@commonInterestScore += (-1)
	    END;

	aggFriend2h = 
    SELECT v
    FROM vFriend2h:v
    ACCUM @@friendInfoTop += friendInfo(v.id, v.firstName, v.lastName, v.@commonInterestScore, v.gender, v.@city);

  PRINT @@friendInfoTop;
}

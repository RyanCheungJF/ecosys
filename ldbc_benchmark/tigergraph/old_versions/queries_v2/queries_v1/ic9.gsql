//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 9 query description is on page 40 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic9
CREATE DISTRIBUTED QUERY ic9(VERTEX<Person> personId, DATETIME maxDate) {
  TYPEDEF tuple<INT personId, STRING personFirstName, STRING personLastName, INT messageId, STRING messageContent, DATETIME messageCreationDate> msgInfo;
  OrAccum @visited;
  HeapAccum<msgInfo>(20, messageCreationDate DESC, messageId ASC) @@msgInfoTop;

  INT i = 0;  

  vPerson = { personId };
	vFriend(Person) = {};
  WHILE i < 2 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-(KNOWS)-Person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True;
	  vFriend = vFriend UNION vPerson;

    i = i + 1;
  END;

  vMessage = 
    SELECT t
    FROM vFriend:s-(<HAS_CREATOR)-(Comment|Post):t
    WHERE t.creationDate < maxDate
    ACCUM 
      IF t.type == "Comment" OR t.content != "" THEN 
        @@msgInfoTop += msgInfo(s.id, s.firstName, s.lastName, t.id, t.content, t.creationDate)
      ELSE 
        @@msgInfoTop += msgInfo(s.id, s.firstName, s.lastName, t.id, t.imageFile, t.creationDate)
      END;

  PRINT @@msgInfoTop;
}

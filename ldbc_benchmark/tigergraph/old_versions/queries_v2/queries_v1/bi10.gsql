//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 10 query description is on page 68 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi10

CREATE DISTRIBUTED QUERY bi10(STRING tagName, DATETIME minDate) { 
  TYPEDEF TUPLE <INT personId, INT score, INT friendsScore, INT totalScore> personInfo;
	HeapAccum<personInfo>(100, totalScore DESC, personId ASC) @@result;
  OrAccum @isInterested;
  OrAccum @hasTag;
  SumAccum<INT> @score,@friendScore;
  SetAccum<VERTEX<Person>> @@personSet;
  
  vTag = 
    SELECT v
    FROM Tag:v
    WHERE v.name == tagName;
  
  vPerson1 =
    SELECT t
    FROM vTag:s-(<HAS_INTEREST)-Person:t 
    ACCUM t.@isInterested = TRUE,
        @@personSet += t,
        t.@score += 100;
  
  vMessage =
    SELECT t
    FROM vTag:s-(<HAS_TAG)-(Post|Comment):t
    WHERE t.creationDate > minDate
    ACCUM t.@hasTag = TRUE;
  
  vPerson2 =
    SELECT t
    FROM vMessage:s-(HAS_CREATOR>)-Person:t
    ACCUM @@personSet += t;
  
  vPerson = { @@personSet };
  
  vPerson =
    SELECT s
    FROM vPerson:s-(<HAS_CREATOR)-(Post|Comment):t
    WHERE t.@hasTag
    ACCUM s.@score += 1;
  
  vFriend =
    SELECT t
    FROM vPerson:s-(KNOWS)-Person:t
    ACCUM s.@friendScore += t.@score;
    
  res =
    SELECT s
    FROM vPerson:s
    ACCUM  @@result += personInfo(s.id, s.@score, s.@friendScore, s.@score+s.@friendScore);
    
  PRINT @@result;
    
}

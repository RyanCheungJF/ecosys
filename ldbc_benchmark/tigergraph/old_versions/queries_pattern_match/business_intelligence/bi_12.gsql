//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 12 query description is on page 70 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi_12

CREATE QUERY bi_12(DATETIME minDate, INT likeThreshold) FOR GRAPH ldbc_snb { 
  TYPEDEF TUPLE<INT messageId, DATETIME messageCreationDate, STRING creatorFirstName, STRING creatorLastName, INT likeCount> msg;

  SumAccum<STRING> @creatorFirstName, @creatorLastName;
  SumAccum<INT> @likeCount;
  HeapAccum<msg>(100, likeCount DESC, messageId ASC) @@trendingMsg;

  vMessage = { Comment.*, Post.* };
  vMessage = 
    SELECT s
    FROM vMessage:s-((Comment_HAS_CREATOR_Person>|Post_HAS_CREATOR_Person>|<Person_LIKES_Comment|<Person_LIKES_Post):e)-Person:t
    WHERE s.creationDate > minDate
    ACCUM 
      CASE
        WHEN (e.type == "Comment_HAS_CREATOR_Person" OR e.type == "Post_HAS_CREATOR_Person") THEN
          s.@creatorFirstName = t.firstName,
          s.@creatorLastName = t.lastName
        WHEN (e.type == "Person_LIKES_Comment" OR e.type == "Person_LIKES_Post") THEN
          s.@likeCount += 1
      END
    POST-ACCUM
      IF s.@likeCount > likeThreshold THEN
        @@trendingMsg += msg(s.id, s.creationDate, s.@creatorFirstName, s.@creatorLastName, s.@likeCount)
      END;

  PRINT @@trendingMsg;
}

// INSTALL QUERY bi_12
// RUN QUERY bi_12("2011-07-21 22:00:00", 400)
SET query_timeout = 180000
INTERPRET QUERY bi_12("2011-07-21 22:00:00", 400)

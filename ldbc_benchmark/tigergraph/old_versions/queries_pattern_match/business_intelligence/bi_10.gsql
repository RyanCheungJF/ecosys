//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 10 query description is on page 68 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi_10

CREATE QUERY bi_10(STRING tagName, DATETIME minDate) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<INT personId, INT score, INT friendScore, INT totalScore> interest;

  SumAccum<INT> @score;
  SumAccum<INT> @friendScore;
  SetAccum<VERTEX<Person>> @@personAll;
  HeapAccum<interest>(100, totalScore DESC, personId ASC) @@interestTop;
  
  vTag = { Tag.* };
  vTag = 
    SELECT v
    FROM vTag:v
    WHERE v.name == tagName;
  
  vPerson1 =
    SELECT t
    FROM vTag:s-(<Person_HAS_INTEREST_Tag:e)-Person:t 
    ACCUM
      t.@score += 100,
      @@personAll += t;

  vPerson2 =
    SELECT t2
    FROM vTag:s
        -((<Post_HAS_TAG_Tag|<Comment_HAS_TAG_Tag):e1)-(Post|Comment):t1
        -((Post_HAS_CREATOR_Person>|Comment_HAS_CREATOR_Person>):e2)-Person:t2
    WHERE t1.creationDate > minDate
    ACCUM t2.@score += 1
    POST-ACCUM @@personAll += t2;

  vPerson = { @@personAll };
  accScore =
    SELECT s
    FROM vPerson:s-((Person_KNOWS_Person>|<Person_KNOWS_Person):e)-Person:t
    ACCUM s.@friendScore += t.@score
    POST-ACCUM @@interestTop += interest(s.id, s.@score, s.@friendScore, (s.@score + s.@friendScore));

  FOREACH it IN @@interestTop DO
    PRINT it.personId, it.score, it.friendScore;
  END;
}

// INSTALL QUERY bi_10
// RUN QUERY bi_10("John_Rhys-Davies", "2012-01-22 00:00:00")
SET query_timeout = 180000
INTERPRET QUERY bi_10("John_Rhys-Davies", "2012-01-22 00:00:00")

//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 21 query description is on page 79 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi_21

CREATE QUERY bi_21(STRING countryName, DATETIME endDate) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<INT zombieId, INT zombieLikeCount, INT totalLikeCount, DOUBLE zombieScore> zombie;

	SumAccum<INT> @messageCount, @likeCount, @zombieLikeCount;
  OrAccum @isZombie;
  HeapAccum<zombie>(100, zombieScore DESC, zombieId ASC) @@zombieTop;
	
	vCountry = { Country.* };
  vPerson =
    SELECT t
    FROM vCountry:s-(<City_IS_PART_OF_Country.<Person_IS_LOCATED_IN_City)-Person:t
    WHERE s.name == countryName
      AND t.creationDate < endDate;
	  
	accPersonMsg =
    SELECT s
    FROM vPerson:s-((<Comment_HAS_CREATOR_Person|<Post_HAS_CREATOR_Person):e)-(Comment|Post):t
    WHERE t.creationDate < endDate
    ACCUM s.@messageCount += 1;
  
  vZombie =
    SELECT v
    FROM vPerson:v
    WHERE v.@messageCount < (year(endDate) - year(v.creationDate)) * 12 + (month(endDate) - month(v.creationDate)) + 1
    ACCUM v.@isZombie += True;

	accLikeCount = 
	  SELECT s
	  FROM vZombie:s
        -((<Post_HAS_CREATOR_Person|<Comment_HAS_CREATOR_Person):e1)-(Post|Comment):t1
        -((<Person_LIKES_Post|<Person_LIKES_Comment):e2)-Person:t2
    WHERE t2.creationDate < endDate
    ACCUM
      s.@likeCount += 1,
      CASE WHEN t1.@isZombie THEN s.@zombieLikeCount += 1 END;

  vZombie =
    SELECT v
    FROM vZombie:v
    ACCUM 
      CASE
        WHEN v.@likeCount > 0 THEN // avoid division by zero
          @@zombieTop += zombie(v.id, v.@zombieLikeCount, v.@likeCount, v.@zombieLikeCount/(v.@likeCount*1.0))
        ELSE
          @@zombieTop += zombie(v.id, 0, 0, 0)
      END;

	PRINT @@zombieTop;
}

// INSTALL QUERY bi_21
// RUN QUERY bi_21("Ethiopia","2013-01-01 00:00:00")
SET query_timeout = 180000
INTERPRET QUERY bi_21("Ethiopia","2013-01-01 00:00:00")

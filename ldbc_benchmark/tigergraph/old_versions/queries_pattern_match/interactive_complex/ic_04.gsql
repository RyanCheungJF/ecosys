//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 4 query description is on page 35 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic_4

CREATE QUERY ic_4(VERTEX<Person> personId, DATETIME startDate, INT durationDays) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING tagName, INT postCount> topic;

  SumAccum<int> @postCount;
  SetAccum<VERTEX<Tag>> @@tagsFav, @@tagsExc;
  HeapAccum<topic>(10, postCount DESC, tagName ASC) @@topicTop;

  DATETIME endDate;
  endDate = DATETIME_add(startDate, INTERVAL durationDays DAY);

  PersonSeed = { personId };

  // find tags of posts created by the Person's friends in the given timeframe
  vTag =
    SELECT tgt
    FROM PersonSeed:src
        -((<Person_KNOWS_Person|Person_KNOWS_Person>))-_
        -(<Post_HAS_CREATOR_Person)-Post:msg
        -(Post_HAS_TAG_Tag>)-Tag:tgt
    ACCUM
      CASE
        WHEN msg.creationDate >= startDate AND msg.creationDate < endDate THEN
          tgt.@postCount += 1
        WHEN msg.creationDate < startDate THEN
          @@tagsExc += tgt
      END
    POST-ACCUM CASE WHEN tgt.@postCount > 0 THEN @@tagsFav += tgt END;

  @@tagsFav = @@tagsFav MINUS @@tagsExc;
  vTag = { @@tagsFav };

  // perform ordering on vTag
  vTag =
    SELECT src
    FROM vTag:src
    ACCUM @@topicTop += topic(src.name, src.@postCount);

  PRINT @@topicTop;
}

//INSTALL QUERY ic_4
//RUN QUERY ic_4(21990232559429, "2012-05-01T00:00:00", 37)
SET query_timeout = 180000
INTERPRET QUERY ic_4(21990232559429, "2012-05-01T00:00:00", 37)

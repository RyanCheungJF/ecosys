USE GRAPH ldbc_snb
SET syntax_version = "v2"

CREATE OR REPLACE DISTRIBUTED QUERY bi4 (DATETIME date) {
  TYPEDEF TUPLE <UINT personId, STRING personFirstName, STRING personLastName,
    DATETIME personCreationDate, UINT messageCount> RESULT;
  HeapAccum<RESULT>(100, messageCount DESC, personId ASC) @@result;
  MapAccum<VERTEX<Country>, UINT> @memberCount;
  MaxAccum<UINT> @maxMemberCount;
  MinAccum<VERTEX<Country>> @country;
  OrAccum<BOOL> @inForum, @selected;
  SumAccum<UINT> @messageCount;
  /*
  popularForums =
    SELECT f
    FROM Country:c -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p -(<HAS_MEMBER)- Forum:f
    WHERE f.creationDate > date
    PER(c,p,f)
    ACCUM f.@memberCount += (c -> 1)
    POST-ACCUM
      FOREACH (city, num) IN f.@memberCount DO
        f.@maxMemberCount += num
      END
    ORDER BY f.@maxMemberCount DESC, f.id ASC
    LIMIT 100;
  */
  F = {Forum.*};
  F = SELECT f FROM F:f WHERE f.creationDate > date;
  persons = SELECT f FROM F:f -(HAS_MEMBER>)- Person:p ACCUM p.@selected += TRUE;
  persons = SELECT p FROM Country:c -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p 
    WHERE p.@selected
    ACCUM p.@country = c;
  popularForums = SELECT f FROM F:f -(HAS_MEMBER>)- Person:p 
    ACCUM f.@memberCount += (p.@country -> 1)
    POST-ACCUM
      FOREACH (city, num) IN f.@memberCount DO
        f.@maxMemberCount += num
      END
    
    ORDER BY f.@maxMemberCount DESC, f.id ASC
    LIMIT 100;

  P = SELECT p FROM popularForums -(HAS_MEMBER>)- Person:p ACCUM p.@inForum += true;
  tmp =
    SELECT p
    FROM popularForums -(CONTAINER_OF>)- Post -(<REPLY_OF*)- Comment:m -(HAS_CREATOR>)- Person:p
    WHERE p.@inForum
    PER(m, p)
    ACCUM p.@messageCount += 1
    POST-ACCUM @@result += RESULT(p.id, p.firstName, p.lastName, p.creationDate, p.@messageCount);
  tmp = 
    SELECT p FROM P:p WHERE p.@messageCount == 0
    POST-ACCUM @@result += RESULT(p.id, p.firstName, p.lastName, p.creationDate, p.@messageCount);

  PRINT @@result;
}

#INTERPRET QUERY bi4("2012-09-01T00:00:00")
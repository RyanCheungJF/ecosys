USE GRAPH ldbc_snb
SET syntax_version = "v2"
CREATE OR REPLACE DISTRIBUTED QUERY bi14(STRING country1, STRING country2) {
  TYPEDEF TUPLE<UINT person1Id, UINT person2Id, STRING city1Name, INT score> pairScore;
  TYPEDEF TUPLE <UINT pid, UINT score> ps;

  HeapAccum<ps>(1, score DESC, pid ASC) @pScore;
  MapAccum<VERTEX<Person>, UINT> @score;
  SetAccum<VERTEX<Person>> @person2, @p2s1, @p2s2, @p2s3, @p2s4, @p2s5;
  OrAccum @valid;
  HeapAccum<pairScore>(1, score DESC, person1Id ASC, person2Id ASC) @cityresults, @@result;
  MinAccum<UINT> @@min_pid2;
  // select city1, person1 and person2
  P1 = SELECT p 
    FROM Country:s -(<IS_PART_OF.<IS_LOCATED_IN)-Person:p 
    WHERE s.name == country1
    ACCUM p.@valid += True;

  P2 = 
    SELECT p
    FROM Country:s -(<IS_PART_OF.<IS_LOCATED_IN)-Person:p
    WHERE s.name == country2
    POST-ACCUM @@min_pid2 += p.id;
  
  M1 = 
    SELECT m FROM P1:p -(<HAS_CREATOR)- (Comment|Post):m
    ACCUM m.@valid += True;

  M2 = 
    SELECT m FROM P2:p -(<HAS_CREATOR)- (Comment|Post):m
    ACCUM m.@person2 += p;
  
  P = SELECT p1 FROM M2:m2 -(<REPLY_OF)- Comment:c1 -(HAS_CREATOR>)- Person:p1 
    WHERE c1.@valid AND p1.@valid
    ACCUM p1.@p2s1 += m2.@person2;

  P = SELECT p1 FROM M2:m2 -(REPLY_OF>)- _:m1 -(HAS_CREATOR>)- Person:p1 
    WHERE m1.@valid AND p1.@valid
    ACCUM p1.@p2s2 += m2.@person2;

  P = SELECT p1 FROM P2:p2 -(KNOWS)- Person:p1
    WHERE p1.@valid
    ACCUM p1.@p2s3 += p2;

  P = SELECT p1 FROM M2:m2 -(<LIKES)- Person:p1
    WHERE p1.@valid
    ACCUM p1.@p2s4 += m2.@person2;

  P = SELECT p1 FROM P2:p2 -(LIKES>)- _:m1 -(HAS_CREATOR>)- Person:p1
    WHERE m1.@valid AND p1.@valid
    ACCUM p1.@p2s5 += p2;

  P1 = SELECT p1 FROM P1:p1
    ACCUM 
      FOREACH p2 IN p1.@p2s1 DO
        p1.@score += (p2 -> 4)
      END,
      FOREACH p2 IN p1.@p2s2 DO
        p1.@score += (p2 -> 1)
      END,
      FOREACH p2 IN p1.@p2s3 DO
        p1.@score += (p2 -> 15)
      END,
      FOREACH p2 IN p1.@p2s4 DO
        p1.@score += (p2 -> 10)
      END,
      FOREACH p2 IN p1.@p2s5 DO
        p1.@score += (p2 -> 1)
      END
    POST-ACCUM
      FOREACH (p2,score) IN p1.@score DO
        p1.@pScore += ps(p2.id,score)
      END;

  City1 = SELECT c1 FROM P1:p1 -(IS_LOCATED_IN>)- City:c1
    ACCUM c1.@cityresults += pairScore(p1.id, p1.@pScore.top().pid, c1.name, p1.@pScore.top().score);

  zeroCity1 = SELECT c1 FROM City1:c1 -(<IS_LOCATED_IN)- Person:p1
    WHERE c1.@cityresults.size() == 0
    ACCUM c1.@cityresults += pairScore(p1.id, @@min_pid2, c1.name, 0);
  
  @@result.resize(City1.size());
  City1 = SELECT c1 FROM City1:c1
    ACCUM @@result += c1.@cityresults.top();
  PRINT @@result;
}

// INSTALL QUERY bi14
// RUN QUERY bi14("Brazil", "Argentina")
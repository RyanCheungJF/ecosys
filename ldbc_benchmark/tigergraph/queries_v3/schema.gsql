DROP ALL

# Vertices

## Message
CREATE VERTEX Comment (PRIMARY_ID id UINT, browserUsed STRING, creationDate DATETIME, locationIP STRING, content STRING, length UINT) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX Post (PRIMARY_ID id UINT, browserUsed STRING, creationDate DATETIME, locationIP STRING, content STRING, length UINT, language STRING, imageFile STRING) WITH primary_id_as_attribute="TRUE"
## Organisation
CREATE VERTEX Company (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX University (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"
## Place
CREATE VERTEX City (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX Country (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX Continent (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"
## Others
CREATE VERTEX Forum (PRIMARY_ID id UINT, title STRING, creationDate DATETIME) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX Person (PRIMARY_ID id UINT, firstName STRING, lastName STRING, gender STRING, birthday DATETIME, email SET<STRING>, speaks SET<STRING>, browserUsed STRING, locationIP STRING, creationDate DATETIME) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX Tag (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"
CREATE VERTEX TagClass (PRIMARY_ID id UINT, name STRING, url STRING) WITH primary_id_as_attribute="TRUE"

# Edges
CREATE DIRECTED EDGE CONTAINER_OF (FROM Forum, TO Post) WITH REVERSE_EDGE="CONTAINER_OF_REVERSE"
CREATE DIRECTED EDGE HAS_CREATOR (FROM Comment|Post, TO Person) WITH REVERSE_EDGE="HAS_CREATOR_REVERSE"
CREATE DIRECTED EDGE HAS_INTEREST (FROM Person, TO Tag) WITH REVERSE_EDGE="HAS_INTEREST_REVERSE"
CREATE DIRECTED EDGE HAS_MEMBER (FROM Forum, TO Person, creationDate DATETIME) WITH REVERSE_EDGE="HAS_MEMBER_REVERSE"
CREATE DIRECTED EDGE HAS_MODERATOR (FROM Forum, TO Person) WITH REVERSE_EDGE="HAS_MODERATOR_REVERSE"
CREATE DIRECTED EDGE HAS_TAG (FROM Comment|Post|Forum, TO Tag) WITH REVERSE_EDGE="HAS_TAG_REVERSE"
CREATE DIRECTED EDGE HAS_TYPE (FROM Tag, TO TagClass) WITH REVERSE_EDGE="HAS_TYPE_REVERSE"
CREATE DIRECTED EDGE IS_LOCATED_IN (FROM Company, TO Country | FROM Comment, TO Country | FROM Post, TO Country | FROM Person, TO City | FROM University, TO City) WITH REVERSE_EDGE="IS_LOCATED_IN_REVERSE"
CREATE DIRECTED EDGE IS_PART_OF (FROM City, TO Country | FROM Country, TO Continent) WITH REVERSE_EDGE="IS_PART_OF_REVERSE"
CREATE DIRECTED EDGE IS_SUBCLASS_OF (FROM TagClass, TO TagClass) WITH REVERSE_EDGE="IS_SUBCLASS_OF_REVERSE"
CREATE UNDIRECTED EDGE KNOWS (FROM Person, TO Person, creationDate DATETIME)
CREATE DIRECTED EDGE LIKES (FROM Person, TO Comment|Post, creationDate DATETIME) WITH REVERSE_EDGE="LIKES_REVERSE"
CREATE DIRECTED EDGE REPLY_OF (FROM Comment, TO Comment|Post) WITH REVERSE_EDGE="REPLY_OF_REVERSE"
CREATE DIRECTED EDGE STUDY_AT (FROM Person, TO University, classYear INT) WITH REVERSE_EDGE="STUDY_AT_REVERSE"
CREATE DIRECTED EDGE WORK_AT (FROM Person, TO Company, workFrom INT) WITH REVERSE_EDGE="WORK_AT_REVERSE"

#CREATE UNDIRECTED EDGE WEIGHT_DOUBLE (FROM *, TO *, weight DOUBLE)

CREATE GRAPH ldbc_snb (*)

CREATE LOADING JOB load_ldbc_snb_composite_merged_fk FOR GRAPH ldbc_snb {
  # Files
  DEFINE FILENAME file_Comment;
  DEFINE FILENAME file_Comment_hasTag_Tag;
  DEFINE FILENAME file_Forum;
  DEFINE FILENAME file_Forum_hasMember_Person;
  DEFINE FILENAME file_Forum_hasTag_Tag;
  DEFINE FILENAME file_Organisation;
  DEFINE FILENAME file_Person;
  DEFINE FILENAME file_Person_hasInterest_Tag;
  DEFINE FILENAME file_Person_knows_Person;
  DEFINE FILENAME file_Person_likes_Comment;
  DEFINE FILENAME file_Person_likes_Post;
  DEFINE FILENAME file_Person_studyAt_University;
  DEFINE FILENAME file_Person_workAt_Company;
  DEFINE FILENAME file_Place;
  DEFINE FILENAME file_Post;
  DEFINE FILENAME file_Post_hasTag_Tag;
  DEFINE FILENAME file_TagClass;
  DEFINE FILENAME file_Tag;

  # Loading
  LOAD file_Comment
    TO VERTEX Comment VALUES ($1, $3, $0, $2, $4, $5),
    TO EDGE HAS_CREATOR VALUES ($1 Comment, $6),
    TO EDGE IS_LOCATED_IN VALUES ($1 Comment, $7 Country),
    TO EDGE REPLY_OF VALUES ($1, $8 Post) WHERE $8 != "",
    TO EDGE REPLY_OF VALUES ($1, $9 Comment) WHERE $9 != ""
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Comment_hasTag_Tag
    TO EDGE HAS_TAG VALUES ($1 Comment, $2)
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_Forum
    TO VERTEX Forum VALUES ($1, $2, $0),
    TO EDGE HAS_MODERATOR VALUES ($1, $3)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Forum_hasMember_Person
    TO EDGE HAS_MEMBER VALUES ($1, $2, $0)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Forum_hasTag_Tag
    TO EDGE HAS_TAG VALUES ($1 Forum, $2)
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_Organisation
    TO VERTEX Company VALUES ($0, $2, $3) WHERE $1 == "Company",
    TO VERTEX University VALUES ($0, $2, $3) WHERE $1 == "University",
    TO EDGE IS_LOCATED_IN Values ($0 Company, $4 Country) WHERE $1 == "Company",
    TO EDGE IS_LOCATED_IN Values ($0 University, $4 City) WHERE $1 == "University"
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_Person
    TO VERTEX Person VALUES ($1, $2, $3, $4, $5, SPLIT($10, ";"), SPLIT($9, ";"), $7, $6, $0),
    TO EDGE IS_LOCATED_IN VALUES ($1 Person, $8 City)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Person_hasInterest_Tag
    TO EDGE HAS_INTEREST VALUES ($1, $2)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Person_knows_Person
    TO EDGE KNOWS VALUES ($1, $2, $0)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Person_likes_Comment
    TO EDGE LIKES VALUES ($1, $2 Comment, $0)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Person_likes_Post
    TO EDGE LIKES VALUES ($1, $2 Post, $0)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Person_studyAt_University
    TO EDGE STUDY_AT VALUES ($1, $2, $3)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Person_workAt_Company
    TO EDGE WORK_AT VALUES ($1, $2, $3)
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_Place
    TO VERTEX Continent VALUES ($0, $1, $2) WHERE $3 == "Continent",
    TO VERTEX Country VALUES ($0, $1, $2) WHERE $3 == "Country",
    TO VERTEX City VALUES ($0, $1, $2) WHERE $3 == "City",
    TO EDGE IS_PART_OF VALUES ($0 Country, $4 Continent) WHERE $3 == "Country",
    TO EDGE IS_PART_OF VALUES ($0 City, $4 Country) WHERE $3 == "City"
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_Post
    TO VERTEX Post VALUES ($1, $4, $0, $3, $6, $7, $5, $2),
    TO EDGE HAS_CREATOR VALUES ($1 Post, $8),
    TO EDGE CONTAINER_OF VALUES ($9, $1),
    TO EDGE IS_LOCATED_IN VALUES ($1 Post, $10 Country)
    USING HEADER = "true", SEPARATOR = "|";
  LOAD file_Post_hasTag_Tag
    TO EDGE HAS_TAG VALUES ($1 Post, $2)
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_TagClass
    TO VERTEX TagClass VALUES ($0, $1, $2),
    TO EDGE IS_SUBCLASS_OF VALUES ($0, $3) WHERE $3 != ""
    USING HEADER = "true", SEPARATOR = "|";

  LOAD file_Tag
    TO VERTEX Tag VALUES ($0, $1, $2),
    TO EDGE HAS_TYPE VALUES ($0, $3)
    USING HEADER = "true", SEPARATOR = "|";
}

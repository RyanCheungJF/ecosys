USE GRAPH ldbc_snb
CREATE OR REPLACE DISTRIBUTED QUERY quick_stat() FOR GRAPH ldbc_snb SYNTAX v2 {
    UINT nComment, nPost, nForum, nPerson;
    UINT nCompany, nUniversity, nCity, nCountry, nConitnent, nTag, nTagClass;
    SumAccum<INT> @@CONTAINER_OF, @@HAS_CREATOR, @@HAS_INTEREST, @@HAS_MEMBER, @@HAS_MODERATOR,
        @@HAS_TAG, @@HAS_TYPE, @@IS_LOCATED_IN, @@IS_PART_OF, @@IS_SUBCLASS_OF, 
        @@KNOWS, @@LIKES, @@REPLY_OF, @@STUDY_AT, @@WORK_AT;
    tmp = {Comment.*}; nComment = tmp.size();
    tmp = {Post.*}; nPost = tmp.size();
    tmp = {Forum.*}; nForum = tmp.size();
    tmp = {Person.*}; nPerson = tmp.size();
    PRINT nComment, nPost, nForum, nPerson;
}
 
# this one is faster but need to be run after some time of update 
# there can be a lag before outdegree is updated
#
CREATE OR REPLACE DISTRIBUTED QUERY stat() FOR GRAPH ldbc_snb SYNTAX v2 {
    UINT nComment, nPost, nForum, nPerson;
    UINT nCompany, nUniversity, nCity, nCountry, nConitnent, nTag, nTagClass;
    SumAccum<INT> @@CONTAINER_OF, @@HAS_CREATOR, @@HAS_INTEREST, @@HAS_MEMBER, @@HAS_MODERATOR,
        @@HAS_TAG, @@HAS_TYPE, @@IS_LOCATED_IN, @@IS_PART_OF, @@IS_SUBCLASS_OF, 
        @@KNOWS, @@LIKES, @@REPLY_OF, @@STUDY_AT, @@WORK_AT;
    tmp = {Comment.*}; nComment = tmp.size();
    tmp = {Post.*}; nPost = tmp.size();
    tmp = {Forum.*}; nForum = tmp.size();
    tmp = {Person.*}; nPerson = tmp.size();
    tmp = {Company.*}; nCompany = tmp.size();
    tmp = {University.*}; nUniversity = tmp.size();
    tmp = {City.*}; nCity = tmp.size();
    tmp = {Country.*}; nCountry = tmp.size();
    tmp = {Continent.*}; nConitnent = tmp.size();
    tmp = {Tag.*}; nTag = tmp.size();
    tmp = {TagClass.*}; nTagClass = tmp.size();
    tmp = SELECT f FROM Forum:f ACCUM @@CONTAINER_OF += f.outdegree("CONTAINER_OF");
    tmp = SELECT f FROM (Comment|Post):f ACCUM @@HAS_CREATOR += f.outdegree("HAS_CREATOR");
    tmp = SELECT f FROM Person:f ACCUM @@HAS_INTEREST += f.outdegree("HAS_INTEREST");
    tmp = SELECT f FROM Forum:f ACCUM @@HAS_MEMBER += f.outdegree("HAS_MEMBER");
    tmp = SELECT f FROM Forum:f ACCUM @@HAS_MODERATOR += f.outdegree("HAS_MODERATOR");
    tmp = SELECT f FROM (Comment|Post|Forum):f ACCUM @@HAS_TAG += f.outdegree("HAS_TAG");
    tmp = SELECT f FROM Tag:f ACCUM @@HAS_TYPE += f.outdegree("HAS_TYPE");
    tmp = SELECT f FROM (Comment|Post|Company|Person|University):f ACCUM @@IS_LOCATED_IN += f.outdegree("IS_LOCATED_IN");
    tmp = SELECT f FROM (City|Country):f ACCUM @@IS_PART_OF += f.outdegree("IS_PART_OF");
    tmp = SELECT f FROM TagClass:f ACCUM @@IS_SUBCLASS_OF += f.outdegree("IS_SUBCLASS_OF");
    tmp = SELECT f FROM Person:f ACCUM @@KNOWS += f.outdegree("KNOWS");
    tmp = SELECT f FROM Person:f ACCUM @@LIKES += f.outdegree("LIKES");
    tmp = SELECT f FROM Comment:f ACCUM @@REPLY_OF += f.outdegree("REPLY_OF");
    tmp = SELECT f FROM Person:f ACCUM @@STUDY_AT += f.outdegree("STUDY_AT");
    tmp = SELECT f FROM Person:f ACCUM @@WORK_AT += f.outdegree("WORK_AT");
    PRINT nComment, nPost, nForum, nPerson,
        nCompany, nUniversity, nCity, nCountry, nConitnent, nTag, nTagClass,
        @@CONTAINER_OF, @@HAS_CREATOR, @@HAS_INTEREST, @@HAS_MEMBER, @@HAS_MODERATOR,
        @@HAS_TAG, @@HAS_TYPE, @@IS_LOCATED_IN, @@IS_PART_OF, @@IS_SUBCLASS_OF, 
        @@KNOWS, @@LIKES, @@REPLY_OF, @@STUDY_AT, @@WORK_AT;
}


/*
CREATE OR REPLACE DISTRIBUTED QUERY stat2() FOR GRAPH ldbc_snb SYNTAX v2 {
    UINT nComment, nPost, nForum, nPerson;
    UINT nCompany, nUniversity, nCity, nCountry, nConitnent, nTag, nTagClass;
    SumAccum<INT> @@HAS_TAG, @@KNOWS, @@LIKES, @@REPLY_OF;
    tmp = {Comment.*}; nComment = tmp.size();
    tmp = {Post.*}; nPost = tmp.size();
    tmp = {Forum.*}; nForum = tmp.size();
    tmp = {Person.*}; nPerson = tmp.size();
    tmp = {Company.*}; nCompany = tmp.size();
    tmp = {University.*}; nUniversity = tmp.size();
    tmp = {City.*}; nCity = tmp.size();
    tmp = {Country.*}; nCountry = tmp.size();
    tmp = {Continent.*}; nConitnent = tmp.size();
    tmp = {Tag.*}; nTag = tmp.size();
    tmp = {TagClass.*}; nTagClass = tmp.size();
    tmp = SELECT f FROM Tag:f -(<HAS_TAG)- (Comment|Post|Forum) ACCUM @@HAS_TAG += 1;
    tmp = SELECT f FROM Person:f-(KNOWS)-Person ACCUM @@KNOWS += 1;
    tmp = SELECT f FROM Person:f-(LIKES>)-(Comment|Post) ACCUM @@LIKES += 1;
    tmp = SELECT f FROM Comment:f-(REPLY_OF>)-(Comment|Post) ACCUM @@REPLY_OF += 1;
    PRINT nComment, nPost, nForum, nPerson,
        nCompany, nUniversity, nCity, nCountry, nConitnent, nTag, nTagClass,
        @@HAS_TAG, @@KNOWS, @@LIKES, @@REPLY_OF;
}
*/

# Interpret do not support DISTRIBUTED query 
# INTERPRET QUERY stat()
# INSTALL QUERY quick_stat, stat
# RUN QUERY stat()